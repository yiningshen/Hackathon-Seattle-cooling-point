{"version":3,"sources":["../node_modules/underscore/modules/_setup.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/streamlit-component-lib/node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/underscore/modules/restArguments.js","../node_modules/underscore/modules/isObject.js","../node_modules/underscore/modules/isNull.js","../node_modules/underscore/modules/isUndefined.js","../node_modules/underscore/modules/isBoolean.js","../node_modules/underscore/modules/isElement.js","../node_modules/underscore/modules/_tagTester.js","../node_modules/underscore/modules/isString.js","../node_modules/underscore/modules/isNumber.js","../node_modules/underscore/modules/isDate.js","../node_modules/underscore/modules/isRegExp.js","../node_modules/underscore/modules/isError.js","../node_modules/underscore/modules/isSymbol.js","../node_modules/underscore/modules/isArrayBuffer.js","../node_modules/underscore/modules/isFunction.js","../node_modules/underscore/modules/_hasObjectTag.js","../node_modules/underscore/modules/_stringTagBug.js","../node_modules/underscore/modules/isDataView.js","../node_modules/underscore/modules/isArray.js","../node_modules/underscore/modules/_has.js","../node_modules/underscore/modules/isArguments.js","../node_modules/underscore/modules/isFinite.js","../node_modules/underscore/modules/isNaN.js","../node_modules/underscore/modules/constant.js","../node_modules/underscore/modules/_createSizePropertyCheck.js","../node_modules/underscore/modules/_shallowProperty.js","../node_modules/underscore/modules/_getByteLength.js","../node_modules/underscore/modules/_isBufferLike.js","../node_modules/underscore/modules/isTypedArray.js","../node_modules/underscore/modules/_getLength.js","../node_modules/underscore/modules/_collectNonEnumProps.js","../node_modules/underscore/modules/keys.js","../node_modules/underscore/modules/isEmpty.js","../node_modules/underscore/modules/isMatch.js","../node_modules/underscore/modules/underscore.js","../node_modules/underscore/modules/_toBufferView.js","../node_modules/underscore/modules/isEqual.js","../node_modules/underscore/modules/allKeys.js","../node_modules/underscore/modules/_methodFingerprint.js","../node_modules/underscore/modules/isMap.js","../node_modules/underscore/modules/isWeakMap.js","../node_modules/underscore/modules/isSet.js","../node_modules/underscore/modules/isWeakSet.js","../node_modules/underscore/modules/values.js","../node_modules/underscore/modules/pairs.js","../node_modules/underscore/modules/invert.js","../node_modules/underscore/modules/functions.js","../node_modules/underscore/modules/_createAssigner.js","../node_modules/underscore/modules/extend.js","../node_modules/underscore/modules/extendOwn.js","../node_modules/underscore/modules/defaults.js","../node_modules/underscore/modules/_baseCreate.js","../node_modules/underscore/modules/create.js","../node_modules/underscore/modules/clone.js","../node_modules/underscore/modules/tap.js","../node_modules/underscore/modules/toPath.js","../node_modules/underscore/modules/_toPath.js","../node_modules/underscore/modules/_deepGet.js","../node_modules/underscore/modules/get.js","../node_modules/underscore/modules/has.js","../node_modules/underscore/modules/identity.js","../node_modules/underscore/modules/matcher.js","../node_modules/underscore/modules/property.js","../node_modules/underscore/modules/_optimizeCb.js","../node_modules/underscore/modules/_baseIteratee.js","../node_modules/underscore/modules/iteratee.js","../node_modules/underscore/modules/_cb.js","../node_modules/underscore/modules/mapObject.js","../node_modules/underscore/modules/noop.js","../node_modules/underscore/modules/propertyOf.js","../node_modules/underscore/modules/times.js","../node_modules/underscore/modules/random.js","../node_modules/underscore/modules/now.js","../node_modules/underscore/modules/_createEscaper.js","../node_modules/underscore/modules/_escapeMap.js","../node_modules/underscore/modules/escape.js","../node_modules/underscore/modules/unescape.js","../node_modules/underscore/modules/_unescapeMap.js","../node_modules/underscore/modules/templateSettings.js","../node_modules/underscore/modules/template.js","../node_modules/underscore/modules/result.js","../node_modules/underscore/modules/uniqueId.js","../node_modules/underscore/modules/chain.js","../node_modules/underscore/modules/_executeBound.js","../node_modules/underscore/modules/partial.js","../node_modules/underscore/modules/bind.js","../node_modules/underscore/modules/_isArrayLike.js","../node_modules/underscore/modules/_flatten.js","../node_modules/underscore/modules/bindAll.js","../node_modules/underscore/modules/memoize.js","../node_modules/underscore/modules/delay.js","../node_modules/underscore/modules/defer.js","../node_modules/underscore/modules/throttle.js","../node_modules/underscore/modules/debounce.js","../node_modules/underscore/modules/wrap.js","../node_modules/underscore/modules/negate.js","../node_modules/underscore/modules/compose.js","../node_modules/underscore/modules/after.js","../node_modules/underscore/modules/before.js","../node_modules/underscore/modules/once.js","../node_modules/underscore/modules/findKey.js","../node_modules/underscore/modules/_createPredicateIndexFinder.js","../node_modules/underscore/modules/findIndex.js","../node_modules/underscore/modules/findLastIndex.js","../node_modules/underscore/modules/sortedIndex.js","../node_modules/underscore/modules/_createIndexFinder.js","../node_modules/underscore/modules/indexOf.js","../node_modules/underscore/modules/lastIndexOf.js","../node_modules/underscore/modules/find.js","../node_modules/underscore/modules/findWhere.js","../node_modules/underscore/modules/each.js","../node_modules/underscore/modules/map.js","../node_modules/underscore/modules/_createReduce.js","../node_modules/underscore/modules/reduce.js","../node_modules/underscore/modules/reduceRight.js","../node_modules/underscore/modules/filter.js","../node_modules/underscore/modules/reject.js","../node_modules/underscore/modules/every.js","../node_modules/underscore/modules/some.js","../node_modules/underscore/modules/contains.js","../node_modules/underscore/modules/invoke.js","../node_modules/underscore/modules/pluck.js","../node_modules/underscore/modules/where.js","../node_modules/underscore/modules/max.js","../node_modules/underscore/modules/min.js","../node_modules/underscore/modules/toArray.js","../node_modules/underscore/modules/sample.js","../node_modules/underscore/modules/shuffle.js","../node_modules/underscore/modules/sortBy.js","../node_modules/underscore/modules/_group.js","../node_modules/underscore/modules/groupBy.js","../node_modules/underscore/modules/indexBy.js","../node_modules/underscore/modules/countBy.js","../node_modules/underscore/modules/partition.js","../node_modules/underscore/modules/size.js","../node_modules/underscore/modules/_keyInObj.js","../node_modules/underscore/modules/pick.js","../node_modules/underscore/modules/omit.js","../node_modules/underscore/modules/initial.js","../node_modules/underscore/modules/first.js","../node_modules/underscore/modules/rest.js","../node_modules/underscore/modules/last.js","../node_modules/underscore/modules/compact.js","../node_modules/underscore/modules/flatten.js","../node_modules/underscore/modules/difference.js","../node_modules/underscore/modules/without.js","../node_modules/underscore/modules/uniq.js","../node_modules/underscore/modules/union.js","../node_modules/underscore/modules/intersection.js","../node_modules/underscore/modules/unzip.js","../node_modules/underscore/modules/zip.js","../node_modules/underscore/modules/object.js","../node_modules/underscore/modules/range.js","../node_modules/underscore/modules/chunk.js","../node_modules/underscore/modules/_chainResult.js","../node_modules/underscore/modules/mixin.js","../node_modules/underscore/modules/underscore-array-methods.js","../node_modules/underscore/modules/index-default.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/streamlit-component-lib/node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/webpack/buildin/global.js"],"names":["VERSION","root","self","global","Function","ArrayProto","Array","prototype","ObjProto","Object","SymbolProto","Symbol","push","slice","toString","hasOwnProperty","supportsArrayBuffer","ArrayBuffer","supportsDataView","DataView","nativeIsArray","isArray","nativeKeys","keys","nativeCreate","create","nativeIsView","isView","_isNaN","isNaN","_isFinite","isFinite","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","MAX_ARRAY_INDEX","Math","pow","_slicedToArray","arr","i","r","l","t","iterator","e","n","u","a","f","o","call","next","done","value","length","unsupportedIterableToArray","TypeError","module","exports","require","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","this","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","enumerable","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","wrapper","BaseEvent","CustomEvent","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","ATTRIBUTE","isObject","x","getListeners","listeners","defineEventAttribute","eventTargetPrototype","eventName","concat","node","listenerType","listener","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","err","handleEvent","setEventPhase","setCurrentTarget","_createForOfIteratorHelper","allowArrayLike","it","F","s","_e","normalCompletion","didErr","step","_e2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","args","_classCallCheck","instance","Constructor","_typeof","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_regeneratorRuntime","c","asyncIterator","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","h","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","name","mark","__proto__","awrap","async","reverse","pop","charAt","stop","rval","handle","complete","finish","delegateYield","_OverloadYield","k","_awaitAsyncGenerator","AsyncGenerator","resume","settle","_wrapAsyncGenerator","_asyncGeneratorDelegate","pump","_asyncIterator","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","flatbuffers","inRange","min","max","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","fromCharCode","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","b","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","_toUint8Array","toUint8Array","from","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","_setPrototypeOf","bind","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","ITERATOR_DONE","freeze","ArrowJSON","_json","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","_ReadableInterop","_Symbol$asyncIterator","_super","_this","_values","resolvers","_closedPromise","_closedPromiseResolve","_cancel","_callee","reason","_context","return","_x","_ensureOpen","_error","streamAdapters","_throw2","_callee2","_","_context2","abort","_x2","_return2","_callee3","_context3","close","_x3","_read","_callee4","_context4","_x4","_peek","_callee5","_context5","_x5","_this2","_ref","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","_ref2","BigIntCtor","BigIntAvailable","_ref3","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayUnavailable","_ref4","BigInt64ArrayCtor","_ref5","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayUnavailable","_ref6","BigUint64ArrayCtor","isNumber","isBoolean","isFunction","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isReadableNodeStream","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","_x6","_y","collapseContiguousByteRanges","reduce","index","Infinity","toArrayBufferView","ArrayBufferViewCtor","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toBigInt64Array","toUint16Array","toUint32Array","Uint32Array","toBigUint64Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","buffers","t0","t1","_marked","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","_toArrayBufferViewAsyncIterator","_callee6","emit","_context8","t2","t3","t4","t5","t6","t7","t8","_context6","_context7","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","_fromAsyncIterable","fromDOMStream","_fromDOMStream","fromNodeStream","_fromNodeStream","threw","cmd","bufferLength","byteRange","_yield","_yield$byteRange","_joinUint8Arrays","_joinUint8Arrays2","throw","_yield2","_yield$byteRange2","_joinUint8Arrays3","_joinUint8Arrays4","_yield3","_yield$byteRange3","_joinUint8Arrays5","_joinUint8Arrays6","AdaptiveByteReader","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","_readFromBYOBReader","readInto","_x7","_x8","_x9","_x10","_readInto","_callee8","_yield$reader$read","_context9","onEvent","_callee7","events","_yield4","_yield$_awaitAsyncGen","_yield$_awaitAsyncGen2","_yield$byteRange4","cleanup","_iterator","_step","_step$value","evt","destroy","_x11","_x12","_joinUint8Arrays7","_joinUint8Arrays8","race","map","_defineProperty","getOwnPropertySymbols","filter","_objectSpread2","getOwnPropertyDescriptors","defineProperties","property","receiver","base","object","desc","org","flatbuf","arrow","apache","AbstractVector","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_","BufferType","Message_","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","xs","begin","context","byteIndex","remaining","popcnt_bit_range","lhs","rhs","_step2","sum","_iterator2","rhsInside","lhsInside","popcnt_array","cnt","pos","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","arrayLikeToArray","iter","Visitor","nodes","_len","_key","visit","_len2","_key2","getVisitFn","visitor","throwIfNotFound","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","_node","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","_Visitor","schema","compareFields","fields","others","every","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","children","compareInterval","indices","dictionary","comparer","ArrayType","_DataType","Int_","_DataType2","_super2","_Int_","_super3","_Int_2","_super4","_Int_3","_super5","_Int_4","_super6","_Int_5","_super7","_Int_6","_super8","_Int_7","_super9","_Int_8","_super10","_DataType3","_super11","_Float","_super12","_Float2","_super13","_Float3","_super14","_DataType4","_super15","_DataType5","_super16","_DataType6","_super17","_DataType7","_super18","_this3","Date_","_DataType8","_super19","_this4","_Date_","_super20","_Date_2","_super21","Time_","_DataType9","_super22","_this5","Timestamp_","_DataType10","_super27","_this6","Interval_","_DataType11","_super32","_this7","_DataType12","_super35","child","_this8","valueType","_DataType13","_super36","_this9","join","Union_","_DataType14","_super37","_this10","typeIdToChildIndex","idx","_DataType15","_super40","_this11","_DataType16","_super41","_this12","Map_","_DataType17","_super42","_this13","atomicDictionaryId","getId","_DataType18","_super43","_this14","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","undf","valueToString","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","roundLengthUpToNearest64Bytes","BPE","BufferBuilder","_resize","extra","reserved","array","sliceOrExtendArray","DataBufferBuilder","_BufferBuilder","reserve","BitmapBufferBuilder","_DataBufferBuilder","numValid","val","cur","_get","OffsetsBufferBuilder","_DataBufferBuilder2","WideBufferBuilder","_BufferBuilder2","_ArrayType64","buffer64","ArrayType64","nulls","_nulls","_isValid","new","flush","numInvalid","_offsets","_typeIds","reservedLength","reservedByteLength","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","last","_options$queueingStra","queueingStrategy","_options$highWaterMar","highWaterMark","sizeProperty","numChunks","append","toVector","throughIterable","_options$queueingStra2","_options$highWaterMar2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","throughAsyncIterable","FixedWidthBuilder","_Builder","opts","VariableWidthBuilder","_Builder2","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","_FixedWidthBuilder","DateDayBuilder","_DateBuilder","DateMillisecondBuilder","_DateBuilder2","DecimalBuilder","DictionaryBuilder","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","_FloatBuilder","Float32Builder","_FloatBuilder2","Float64Builder","_FloatBuilder3","Parent","Class","bignumToString","bignumToBigInt","isArrowBigNumSymbol","for","BigNum","_construct","SignedBigNum","UnsignedBigNum","_len3","_key3","DecimalBigNum","_len4","_key4","bignumToNumber","bn","hi","lo","signed","words","number","decimalToString","digits","base64","base32","checks","toJSON","assign","memo","BN","num","IntBuilder","Int8Builder","_IntBuilder","Int16Builder","_IntBuilder2","Int32Builder","_IntBuilder3","Int64Builder","_IntBuilder4","toBigInt","Uint8Builder","_IntBuilder5","Uint16Builder","_IntBuilder6","Uint32Builder","_IntBuilder7","Uint64Builder","_IntBuilder8","TimeBuilder","TimeSecondBuilder","_TimeBuilder","TimeMillisecondBuilder","_TimeBuilder2","TimeMicrosecondBuilder","_TimeBuilder3","TimeNanosecondBuilder","_TimeBuilder4","TimestampBuilder","TimestampSecondBuilder","_TimestampBuilder","TimestampMillisecondBuilder","_TimestampBuilder2","TimestampMicrosecondBuilder","_TimestampBuilder3","TimestampNanosecondBuilder","_TimestampBuilder4","IntervalBuilder","IntervalDayTimeBuilder","_IntervalBuilder","IntervalYearMonthBuilder","_IntervalBuilder2","BinaryBuilder","_VariableWidthBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","_Symbol$iterator","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","kr","vr","has","callbackfn","thisArg","callback","m","str","_Object$definePropert","MapRow","_Row","createRowProxy","getChildAt","StructRow","_Row2","defineRowProxyProperties","findIndex","tmp","row","_step3","getter","setter","_iterator3","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","end","_source$length","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","_AbstractVector","vectors","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","chunk","isDictionary","_indices","flatten","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","element","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","selectChunkArgs","Column","_Chunked","_field","SingleChunkColumn","metadata","column","rest","some","_Column","_chunk","selectArgs","Ctor","vals","_selectArgs","selectFieldArgs","_selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","toKeysAndValues","ret","_Object$entries$reduc","entries","_Object$entries$reduc2","fieldIndex","valueIndex","_ret","_keys$idx","_Symbol$toStringTag","dictionaries","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","_Symbol$toStringTag2","_args","_args2","_args2$","_args2$2","_args2$3","_args2$4","_args$","_args$$name","_args$$type","_args$$nullable","_args$$metadata","_len5","_key5","_len6","_key6","m1","m2","ListBuilder","_run","run","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","_this$type","SparseUnionBuilder","_UnionBuilder","DenseUnionBuilder","_UnionBuilder2","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","values64","long","setTimestampSecond","_ref9","setTimestampMillisecond","_ref10","setTimestampMicrosecond","_ref11","setEpochMsToMicrosecondsLong","setTimestampNanosecond","_ref12","setEpochMsToNanosecondsLong","setTimeSecond","_ref13","setTimeMillisecond","_ref14","setTimeMicrosecond","_ref15","setTimeNanosecond","_ref16","setDenseUnion","setSparseUnion","setIntervalDayTime","_ref18","setIntervalYearMonth","_ref19","_ref8","_ref7","_ref17","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","GetBuilderCtor","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","_objectSpread","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","block","numRecordBatches","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","rb","FileBlock","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_Footer_","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","_AsyncQueue","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","closed","cancel","_args5","RandomAccessFile","_ByteStream","_this$readAt","readAt","getInt32","nBytes","AsyncRandomAccessFile","_AsyncByteStream","file","_handle","stat","_readInt","_yield$this$readAt","_seek","bytesRead","_yield$file$read","_readAt","_close","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_BaseInt","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","_BaseInt2","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","_ref20","JSONVectorLoader","_VectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","joined","binaryDataFromJSON","isBool","isUtf8","TypeAssembler","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","fieldChildrenFromJSON","fromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","_id","decodeFieldChildren","childrenLength","decodeCustomMetadata","entry","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","_schema","fieldsLength","decodeSchemaFields","schemaFieldsFromJSON","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","batch","nodesLength","decodeFieldNodes","bufferRegions","buffersLength","decodeBuffers","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","_readMessage","_readMessageBody","_readSchema","_args6","_readMetadataLength","_readMetadata","JSONMessageReader","_MessageReader","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","RangeError","isNull","addBuffer","_nullV","assembler","vectorChildren","_assembler$visitMany","_assembler$visitMany3","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","sync","writeAll","writeAllAsync","sink","isWritableNodeStream","objectMode","_writeFooter","compareTo","_writeSchema","payload","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","_VectorAssembler$asse","assemble","_writeDictionaries","_writeBodyBuffers","_VectorAssembler$asse2","padding","_step2$value","_writeDictionaryBatch","writableStrategy","readableStrategy","RecordBatchStreamWriter","_RecordBatchWriter","writer","RecordBatchFileWriter","_RecordBatchWriter2","_writeMagic","_step5","_iterator5","_writeAllAsync","noopBuf","nullBufs","bitmapLength","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","batchLength","numColumns","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_changeLengthAndBackfillNullBitmap","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","BaseVector","_bindDataAccessors","VectorName","isConcatSpreadable","BinaryVector","_BaseVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","_DateVector","DateMillisecondVector","_DateVector2","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","_FloatVector","Float32Vector","_FloatVector2","Float64Vector","_FloatVector3","typeCtor","dataCtor","ctor","IntervalVector","IntervalDayTimeVector","_IntervalVector","IntervalYearMonthVector","_IntervalVector2","IntVector","is64bit","convert32To64Bit","Int8Vector","_IntVector","Int16Vector","_IntVector2","Int32Vector","_IntVector3","Int64Vector","_IntVector4","_values64","Uint8Vector","_IntVector5","Uint16Vector","_IntVector6","Uint32Vector","_IntVector7","Uint64Vector","_IntVector8","ListVector","MapVector","_this$valueOffsets","NullVector","StructVector","_row","bound","TimestampVector","TimestampSecondVector","_TimestampVector","TimestampMillisecondVector","_TimestampVector2","TimestampMicrosecondVector","_TimestampVector3","TimestampNanosecondVector","_TimestampVector4","TimeVector","TimeSecondVector","_TimeVector","TimeMillisecondVector","_TimeVector2","TimeMicrosecondVector","_TimeVector3","TimeNanosecondVector","_TimeVector4","UnionVector","DenseUnionVector","_UnionVector","SparseUnionVector","_UnionVector2","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","ByteWidthVisitor","____","visitFields","GetVectorConstructor","newDataType","_input","_input$values","_input$type","_input$nullValues","getVectorConstructor","_nullValues$input","_nullValues$input$val","_excluded","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","nameToIndex","selectAt","columnName","_this$_schema","_other$schema$fields$","newIdx","_memo","oldToNew","_other$schema$fields$2","_f","_fs","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","_fromAsync","cols","_selectFieldArgs2","_selectFieldArgs3","selectColumnArgs","_StructVector","_dictionaries","DictionaryCollector","collect","fs","vs","batchData","ensureSameLengthData","readAllSync","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","_fromFileHandle","fromFileHandle","_fromAsyncByteStream","fromAsyncByteStream","RecordBatchFileReader","RecordBatchFileReaderImpl","RecordBatchStreamReaderImpl","_callee15","_context16","fromByteStream","readAllAsync","_RecordBatchReader","_Symbol$iterator2","_Symbol$asyncIterator2","AsyncRecordBatchStreamReader","_RecordBatchReader2","_Symbol$iterator3","_Symbol$asyncIterator3","_RecordBatchStreamRea","AsyncRecordBatchFileReader","_AsyncRecordBatchStre","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_RecordBatchReaderImp","_Symbol$iterator4","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","AsyncRecordBatchStreamReaderImpl","_RecordBatchReaderImp2","_Symbol$asyncIterator4","_open","_header2","_buffer2","_readNextMessageAndValidate2","_RecordBatchStreamRea2","_readFooter","_readDictionaryBatch","seek","AsyncRecordBatchFileReaderImpl","_AsyncRecordBatchStre2","_open2","_callee9","_readRecordBatch","_callee10","_context10","_readDictionaryBatch2","_callee11","_context11","_readFooter2","_callee12","_context12","_readNextMessageAndValidate3","_callee13","_context13","_RecordBatchStreamRea3","_context14","_readAllAsync","_callee14","_context15","_callee17","_context18","_callee16","_context17","_callee18","_yield$source$stat","_context19","BuilderTransform","_ReadableStream","_WritableStream","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","_readableStrategy$hig","readableHighWaterMark","_writableStrategy$hig","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","_Value","Col","_Value2","colidx","Predicate","expr","And","Or","ComparisonPredicate","_Predicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","_Predicate2","_CombinationPredicate","accum","_CombinationPredicate2","_ComparisonPredicate","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","_ComparisonPredicate2","_ComparisonPredicate3","_Predicate3","func","countBy","DataFrame","scan","scanReverse","predicate","_Table","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_Table2","_DataFrame","_predicate","isBound","and","util_bn_","util_int_","util_bit_","util_math_","util_buffer_","util_vector_","bm","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","_unsupportedIterableToArray","minLen","test","_arrayLikeToArray","arr2","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","restArguments","startIndex","isUndefined","isElement","nodeType","tagTester","tag","nodelist","childNodes","hasStringTagBug","hasObjectTag","isIE11","isDataView","getInt8","isArrayBuffer","isArguments","isSymbol","parseFloat","constant","createSizePropertyCheck","getSizeProperty","collection","shallowProperty","getByteLength","typedArrayPattern","isBufferLike","collectNonEnumProps","hash","contains","emulatedSet","nonEnumIdx","prop","isEmpty","getLength","isString","isMatch","attrs","_keys","_wrapped","toBufferView","bufferSource","tagDataView","aStack","bStack","deepEq","className","areArrays","aCtor","bCtor","isEqual","allKeys","ie11fingerprint","methods","weakMapMethods","forEachName","commonInit","mapTail","mapMethods","setMethods","pairs","invert","functions","sort","createAssigner","keysFunc","defaults","baseCreate","extendOwn","extend","tap","interceptor","toPath","path","deepGet","_has","identity","matcher","optimizeCb","argCount","accumulator","baseIteratee","iteratee","cb","mapObject","results","currentKey","noop","propertyOf","random","getTime","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","replace","escapeMap","templateSettings","evaluate","interpolate","escape","noMatch","escapes","escapeRegExp","escapeChar","bareIdentifier","template","text","settings","oldSettings","argument","variable","fallback","idCounter","uniqueId","prefix","chain","_chain","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","placeholder","callArgs","depth","strict","output","isArrayLike","memoize","hasher","cache","address","wait","setTimeout","delay","throttle","timeout","previous","later","leading","throttled","_now","clearTimeout","trailing","debounce","immediate","passed","debounced","compose","after","before","findKey","createPredicateIndexFinder","dir","sortedIndex","createIndexFinder","predicateFind","item","findLastIndex","find","findWhere","each","createReduce","initial","reducer","list","guard","contextPath","pluck","where","computed","lastComputed","reStrSymbol","sample","rand","shuffle","sortBy","criteria","behavior","partition","pass","keyInObj","pick","first","compact","_flatten","otherArrays","difference","uniq","isSorted","seen","arrays","intersection","argsLength","unzip","range","chainResult","mixin","allExports","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","test1","test2","test3","split","letter","shouldUseNative","symbols","toObject"],"mappings":"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","file":"static/js/2.f8ba20a6.chunk.js","sourcesContent":["// Current version.\nexport var VERSION = '1.13.6';\n\n// Establish the root object, `window` (`self`) in the browser, `global`\n// on the server, or `this` in some virtual machines. We use `self`\n// instead of `window` for `WebWorker` support.\nexport var root = (typeof self == 'object' && self.self === self && self) ||\n          (typeof global == 'object' && global.global === global && global) ||\n          Function('return this')() ||\n          {};\n\n// Save bytes in the minified (but not gzipped) version:\nexport var ArrayProto = Array.prototype, ObjProto = Object.prototype;\nexport var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n// Modern feature detection.\nexport var supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\n    supportsDataView = typeof DataView !== 'undefined';\n\n// All **ECMAScript 5+** native function implementations that we hope to use\n// are declared here.\nexport var nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeCreate = Object.create,\n    nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\n\n// Create references to these builtin functions because we override them.\nexport var _isNaN = isNaN,\n    _isFinite = isFinite;\n\n// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\nexport var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\nexport var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n// The largest integer that can be represented exactly.\nexport var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}","export default function _OverloadYield(t, e) {\n  this.v = t, this.k = e;\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _awaitAsyncGenerator(e) {\n  return new OverloadYield(e, 0);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function AsyncGenerator(e) {\n  var r, t;\n  function resume(r, t) {\n    try {\n      var n = e[r](t),\n        o = n.value,\n        u = o instanceof OverloadYield;\n      Promise.resolve(u ? o.v : o).then(function (t) {\n        if (u) {\n          var i = \"return\" === r ? \"return\" : \"next\";\n          if (!o.k || t.done) return resume(i, t);\n          t = e[i](t).value;\n        }\n        settle(n.done ? \"return\" : \"normal\", t);\n      }, function (e) {\n        resume(\"throw\", e);\n      });\n    } catch (e) {\n      settle(\"throw\", e);\n    }\n  }\n  function settle(e, n) {\n    switch (e) {\n      case \"return\":\n        r.resolve({\n          value: n,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        r.reject(n);\n        break;\n      default:\n        r.resolve({\n          value: n,\n          done: !1\n        });\n    }\n    (r = r.next) ? resume(r.key, r.arg) : t = null;\n  }\n  this._invoke = function (e, n) {\n    return new Promise(function (o, u) {\n      var i = {\n        key: e,\n        arg: n,\n        resolve: o,\n        reject: u,\n        next: null\n      };\n      t ? t = t.next = i : (r = t = i, resume(e, n));\n    });\n  }, \"function\" != typeof e[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (e) {\n  return this._invoke(\"next\", e);\n}, AsyncGenerator.prototype[\"throw\"] = function (e) {\n  return this._invoke(\"throw\", e);\n}, AsyncGenerator.prototype[\"return\"] = function (e) {\n  return this._invoke(\"return\", e);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _asyncGeneratorDelegate(t) {\n  var e = {},\n    n = !1;\n  function pump(e, r) {\n    return n = !0, r = new Promise(function (n) {\n      n(t[e](r));\n    }), {\n      done: !1,\n      value: new OverloadYield(r, 1)\n    };\n  }\n  return e[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, e.next = function (t) {\n    return n ? (n = !1, t) : pump(\"next\", t);\n  }, \"function\" == typeof t[\"throw\"] && (e[\"throw\"] = function (t) {\n    if (n) throw n = !1, t;\n    return pump(\"throw\", t);\n  }), \"function\" == typeof t[\"return\"] && (e[\"return\"] = function (t) {\n    return n ? (n = !1, t) : pump(\"return\", t);\n  }), e;\n}","export default function _asyncIterator(r) {\n  var n,\n    t,\n    o,\n    e = 2;\n  for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) {\n    if (t && null != (n = r[t])) return n.call(r);\n    if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r));\n    t = \"@@asyncIterator\", o = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(r) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var n = r.done;\n    return Promise.resolve(r.value).then(function (r) {\n      return {\n        value: r,\n        done: n\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) {\n    this.s = r, this.n = r.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.resolve({\n        value: r,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(r) {\n      var n = this.s[\"return\"];\n      return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(r);\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n","// Is a given variable an object?\nexport default function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || (type === 'object' && !!obj);\n}\n","// Is a given value equal to null?\nexport default function isNull(obj) {\n  return obj === null;\n}\n","// Is a given variable undefined?\nexport default function isUndefined(obj) {\n  return obj === void 0;\n}\n","import { toString } from './_setup.js';\n\n// Is a given value a boolean?\nexport default function isBoolean(obj) {\n  return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n}\n","// Is a given value a DOM element?\nexport default function isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n","import { toString } from './_setup.js';\n\n// Internal function for creating a `toString`-based type tester.\nexport default function tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return toString.call(obj) === tag;\n  };\n}\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('String');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Number');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Date');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('RegExp');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Error');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Symbol');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('ArrayBuffer');\n","import tagTester from './_tagTester.js';\nimport { root } from './_setup.js';\n\nvar isFunction = tagTester('Function');\n\n// Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nvar nodelist = root.document && root.document.childNodes;\nif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport default isFunction;\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Object');\n","import { supportsDataView } from './_setup.js';\nimport hasObjectTag from './_hasObjectTag.js';\n\n// In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.\n// In IE 11, the most common among them, this problem also applies to\n// `Map`, `WeakMap` and `Set`.\nexport var hasStringTagBug = (\n      supportsDataView && hasObjectTag(new DataView(new ArrayBuffer(8)))\n    ),\n    isIE11 = (typeof Map !== 'undefined' && hasObjectTag(new Map));\n","import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasStringTagBug } from './_stringTagBug.js';\n\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\nfunction ie10IsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\n\nexport default (hasStringTagBug ? ie10IsDataView : isDataView);\n","import { nativeIsArray } from './_setup.js';\nimport tagTester from './_tagTester.js';\n\n// Is a given value an array?\n// Delegates to ECMA5's native `Array.isArray`.\nexport default nativeIsArray || tagTester('Array');\n","import { hasOwnProperty } from './_setup.js';\n\n// Internal function to check whether `key` is an own property name of `obj`.\nexport default function has(obj, key) {\n  return obj != null && hasOwnProperty.call(obj, key);\n}\n","import tagTester from './_tagTester.js';\nimport has from './_has.js';\n\nvar isArguments = tagTester('Arguments');\n\n// Define a fallback version of the method in browsers (ahem, IE < 9), where\n// there isn't any inspectable \"Arguments\" type.\n(function() {\n  if (!isArguments(arguments)) {\n    isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n}());\n\nexport default isArguments;\n","import { _isFinite } from './_setup.js';\nimport isSymbol from './isSymbol.js';\n\n// Is a given object a finite number?\nexport default function isFinite(obj) {\n  return !isSymbol(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));\n}\n","import { _isNaN } from './_setup.js';\nimport isNumber from './isNumber.js';\n\n// Is the given value `NaN`?\nexport default function isNaN(obj) {\n  return isNumber(obj) && _isNaN(obj);\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function constant(value) {\n  return function() {\n    return value;\n  };\n}\n","import { MAX_ARRAY_INDEX } from './_setup.js';\n\n// Common internal logic for `isArrayLike` and `isBufferLike`.\nexport default function createSizePropertyCheck(getSizeProperty) {\n  return function(collection) {\n    var sizeProperty = getSizeProperty(collection);\n    return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;\n  }\n}\n","// Internal helper to generate a function to obtain property `key` from `obj`.\nexport default function shallowProperty(key) {\n  return function(obj) {\n    return obj == null ? void 0 : obj[key];\n  };\n}\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `byteLength` property of an object.\nexport default shallowProperty('byteLength');\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getByteLength from './_getByteLength.js';\n\n// Internal helper to determine whether we should spend extensive checks against\n// `ArrayBuffer` et al.\nexport default createSizePropertyCheck(getByteLength);\n","import { supportsArrayBuffer, nativeIsView, toString } from './_setup.js';\nimport isDataView from './isDataView.js';\nimport constant from './constant.js';\nimport isBufferLike from './_isBufferLike.js';\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return nativeIsView ? (nativeIsView(obj) && !isDataView(obj)) :\n                isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\n}\n\nexport default supportsArrayBuffer ? isTypedArray : constant(false);\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `length` property of an object.\nexport default shallowProperty('length');\n","import { nonEnumerableProps, ObjProto } from './_setup.js';\nimport isFunction from './isFunction.js';\nimport has from './_has.js';\n\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function(key) { return hash[key] === true; },\n    push: function(key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nexport default function collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (isFunction(constructor) && constructor.prototype) || ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if (has(obj, prop) && !keys.contains(prop)) keys.push(prop);\n\n  while (nonEnumIdx--) {\n    prop = nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}\n","import isObject from './isObject.js';\nimport { nativeKeys, hasEnumBug } from './_setup.js';\nimport has from './_has.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve the names of an object's own properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`.\nexport default function keys(obj) {\n  if (!isObject(obj)) return [];\n  if (nativeKeys) return nativeKeys(obj);\n  var keys = [];\n  for (var key in obj) if (has(obj, key)) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isArray from './isArray.js';\nimport isString from './isString.js';\nimport isArguments from './isArguments.js';\nimport keys from './keys.js';\n\n// Is a given array, string, or object empty?\n// An \"empty\" object has no enumerable own-properties.\nexport default function isEmpty(obj) {\n  if (obj == null) return true;\n  // Skip the more expensive `toString`-based type checks if `obj` has no\n  // `.length`.\n  var length = getLength(obj);\n  if (typeof length == 'number' && (\n    isArray(obj) || isString(obj) || isArguments(obj)\n  )) return length === 0;\n  return getLength(keys(obj)) === 0;\n}\n","import keys from './keys.js';\n\n// Returns whether an object has a given set of `key:value` pairs.\nexport default function isMatch(object, attrs) {\n  var _keys = keys(attrs), length = _keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = _keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n","import { VERSION } from './_setup.js';\n\n// If Underscore is called as a function, it returns a wrapped object that can\n// be used OO-style. This wrapper holds altered versions of all functions added\n// through `_.mixin`. Wrapped objects may be chained.\nexport default function _(obj) {\n  if (obj instanceof _) return obj;\n  if (!(this instanceof _)) return new _(obj);\n  this._wrapped = obj;\n}\n\n_.VERSION = VERSION;\n\n// Extracts the result from a wrapped and chained object.\n_.prototype.value = function() {\n  return this._wrapped;\n};\n\n// Provide unwrapping proxies for some methods used in engine operations\n// such as arithmetic and JSON stringification.\n_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n_.prototype.toString = function() {\n  return String(this._wrapped);\n};\n","import getByteLength from './_getByteLength.js';\n\n// Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(\n    bufferSource.buffer || bufferSource,\n    bufferSource.byteOffset || 0,\n    getByteLength(bufferSource)\n  );\n}\n","import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug }  from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js';\n\n// We use this string twice, so give it a name for minification.\nvar tagDataView = '[object DataView]';\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  // `null` or `undefined` only equal to itself (strict comparison).\n  if (a == null || b == null) return false;\n  // `NaN`s are equivalent, but non-reflexive.\n  if (a !== a) return b !== b;\n  // Exhaust primitive checks\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n}\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped;\n  // Compare `[[Class]]` names.\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false;\n  // Work around a bug in IE 10 - Edge 13.\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b;\n      // An `egal` comparison is performed for other numeric values.\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n  if (!areArrays && isTypedArray(a)) {\n      var byteLength = getByteLength(a);\n      if (byteLength !== getByteLength(b)) return false;\n      if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n      areArrays = true;\n  }\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false;\n\n    // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                             isFunction(bCtor) && bCtor instanceof bCtor)\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n  }\n  // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  }\n\n  // Add the first object to the stack of traversed objects.\n  aStack.push(a);\n  bStack.push(b);\n\n  // Recursively compare objects and arrays.\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false;\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a), key;\n    length = _keys.length;\n    // Ensure that both objects contain the same number of properties before comparing deep equality.\n    if (keys(b).length !== length) return false;\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  }\n  // Remove the first object from the stack of traversed objects.\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\n// Perform a deep comparison to check if two objects are equal.\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}\n","import isObject from './isObject.js';\nimport { hasEnumBug } from './_setup.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve all the enumerable property names of an object.\nexport default function allKeys(obj) {\n  if (!isObject(obj)) return [];\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isFunction from './isFunction.js';\nimport allKeys from './allKeys.js';\n\n// Since the regular `Object.prototype.toString` type tests don't work for\n// some types in IE 11, we use a fingerprinting heuristic instead, based\n// on the methods. It's not great, but it's the best we got.\n// The fingerprint method lists are defined below.\nexport function ie11fingerprint(methods) {\n  var length = getLength(methods);\n  return function(obj) {\n    if (obj == null) return false;\n    // `Map`, `WeakMap` and `Set` have no enumerable keys.\n    var keys = allKeys(obj);\n    if (getLength(keys)) return false;\n    for (var i = 0; i < length; i++) {\n      if (!isFunction(obj[methods[i]])) return false;\n    }\n    // If we are testing against `WeakMap`, we need to ensure that\n    // `obj` doesn't have a `forEach` method in order to distinguish\n    // it from a regular `Map`.\n    return methods !== weakMapMethods || !isFunction(obj[forEachName]);\n  };\n}\n\n// In the interest of compact minification, we write\n// each string in the fingerprints only once.\nvar forEachName = 'forEach',\n    hasName = 'has',\n    commonInit = ['clear', 'delete'],\n    mapTail = ['get', hasName, 'set'];\n\n// `Map`, `WeakMap` and `Set` each have slightly different\n// combinations of the above sublists.\nexport var mapMethods = commonInit.concat(forEachName, mapTail),\n    weakMapMethods = commonInit.concat(mapTail),\n    setMethods = ['add'].concat(commonInit, forEachName, hasName);\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, mapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(mapMethods) : tagTester('Map');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, weakMapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(weakMapMethods) : tagTester('WeakMap');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, setMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(setMethods) : tagTester('Set');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('WeakSet');\n","import keys from './keys.js';\n\n// Retrieve the values of an object's properties.\nexport default function values(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var values = Array(length);\n  for (var i = 0; i < length; i++) {\n    values[i] = obj[_keys[i]];\n  }\n  return values;\n}\n","import keys from './keys.js';\n\n// Convert an object into a list of `[key, value]` pairs.\n// The opposite of `_.object` with one argument.\nexport default function pairs(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var pairs = Array(length);\n  for (var i = 0; i < length; i++) {\n    pairs[i] = [_keys[i], obj[_keys[i]]];\n  }\n  return pairs;\n}\n","import keys from './keys.js';\n\n// Invert the keys and values of an object. The values must be serializable.\nexport default function invert(obj) {\n  var result = {};\n  var _keys = keys(obj);\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    result[obj[_keys[i]]] = _keys[i];\n  }\n  return result;\n}\n","import isFunction from './isFunction.js';\n\n// Return a sorted list of the function names available on the object.\nexport default function functions(obj) {\n  var names = [];\n  for (var key in obj) {\n    if (isFunction(obj[key])) names.push(key);\n  }\n  return names.sort();\n}\n","// An internal function for creating assigner functions.\nexport default function createAssigner(keysFunc, defaults) {\n  return function(obj) {\n    var length = arguments.length;\n    if (defaults) obj = Object(obj);\n    if (length < 2 || obj == null) return obj;\n    for (var index = 1; index < length; index++) {\n      var source = arguments[index],\n          keys = keysFunc(source),\n          l = keys.length;\n      for (var i = 0; i < l; i++) {\n        var key = keys[i];\n        if (!defaults || obj[key] === void 0) obj[key] = source[key];\n      }\n    }\n    return obj;\n  };\n}\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Extend a given object with all the properties in passed-in object(s).\nexport default createAssigner(allKeys);\n","import createAssigner from './_createAssigner.js';\nimport keys from './keys.js';\n\n// Assigns a given object with all the own properties in the passed-in\n// object(s).\n// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\nexport default createAssigner(keys);\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Fill in a given object with default properties.\nexport default createAssigner(allKeys, true);\n","import isObject from './isObject.js';\nimport { nativeCreate } from './_setup.js';\n\n// Create a naked function reference for surrogate-prototype-swapping.\nfunction ctor() {\n  return function(){};\n}\n\n// An internal function for creating a new object that inherits from another.\nexport default function baseCreate(prototype) {\n  if (!isObject(prototype)) return {};\n  if (nativeCreate) return nativeCreate(prototype);\n  var Ctor = ctor();\n  Ctor.prototype = prototype;\n  var result = new Ctor;\n  Ctor.prototype = null;\n  return result;\n}\n","import baseCreate from './_baseCreate.js';\nimport extendOwn from './extendOwn.js';\n\n// Creates an object that inherits from the given prototype object.\n// If additional properties are provided then they will be added to the\n// created object.\nexport default function create(prototype, props) {\n  var result = baseCreate(prototype);\n  if (props) extendOwn(result, props);\n  return result;\n}\n","import isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport extend from './extend.js';\n\n// Create a (shallow-cloned) duplicate of an object.\nexport default function clone(obj) {\n  if (!isObject(obj)) return obj;\n  return isArray(obj) ? obj.slice() : extend({}, obj);\n}\n","// Invokes `interceptor` with the `obj` and then returns `obj`.\n// The primary purpose of this method is to \"tap into\" a method chain, in\n// order to perform operations on intermediate results within the chain.\nexport default function tap(obj, interceptor) {\n  interceptor(obj);\n  return obj;\n}\n","import _ from './underscore.js';\nimport isArray from './isArray.js';\n\n// Normalize a (deep) property `path` to array.\n// Like `_.iteratee`, this function can be customized.\nexport default function toPath(path) {\n  return isArray(path) ? path : [path];\n}\n_.toPath = toPath;\n","import _ from './underscore.js';\nimport './toPath.js';\n\n// Internal wrapper for `_.toPath` to enable minification.\n// Similar to `cb` for `_.iteratee`.\nexport default function toPath(path) {\n  return _.toPath(path);\n}\n","// Internal function to obtain a nested property in `obj` along `path`.\nexport default function deepGet(obj, path) {\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    if (obj == null) return void 0;\n    obj = obj[path[i]];\n  }\n  return length ? obj : void 0;\n}\n","import toPath from './_toPath.js';\nimport deepGet from './_deepGet.js';\nimport isUndefined from './isUndefined.js';\n\n// Get the value of the (deep) property on `path` from `object`.\n// If any property in `path` does not exist or if the value is\n// `undefined`, return `defaultValue` instead.\n// The `path` is normalized through `_.toPath`.\nexport default function get(object, path, defaultValue) {\n  var value = deepGet(object, toPath(path));\n  return isUndefined(value) ? defaultValue : value;\n}\n","import _has from './_has.js';\nimport toPath from './_toPath.js';\n\n// Shortcut function for checking if an object has a given property directly on\n// itself (in other words, not on a prototype). Unlike the internal `has`\n// function, this public version can also traverse nested properties.\nexport default function has(obj, path) {\n  path = toPath(path);\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    var key = path[i];\n    if (!_has(obj, key)) return false;\n    obj = obj[key];\n  }\n  return !!length;\n}\n","// Keep the identity function around for default iteratees.\nexport default function identity(value) {\n  return value;\n}\n","import extendOwn from './extendOwn.js';\nimport isMatch from './isMatch.js';\n\n// Returns a predicate for checking whether an object has a given set of\n// `key:value` pairs.\nexport default function matcher(attrs) {\n  attrs = extendOwn({}, attrs);\n  return function(obj) {\n    return isMatch(obj, attrs);\n  };\n}\n","import deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Creates a function that, when passed an object, will traverse that object’s\n// properties down the given `path`, specified as an array of keys or indices.\nexport default function property(path) {\n  path = toPath(path);\n  return function(obj) {\n    return deepGet(obj, path);\n  };\n}\n","// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nexport default function optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1: return function(value) {\n      return func.call(context, value);\n    };\n    // The 2-argument case is omitted because we’re not using it.\n    case 3: return function(value, index, collection) {\n      return func.call(context, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(context, accumulator, value, index, collection);\n    };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n","import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\n\n// External wrapper for our callback generator. Users may customize\n// `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n// This abstraction hides the internal-only `argCount` argument.\nexport default function iteratee(value, context) {\n  return baseIteratee(value, context, Infinity);\n}\n_.iteratee = iteratee;\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\nimport iteratee from './iteratee.js';\n\n// The function we call internally to generate a callback. It invokes\n// `_.iteratee` if overridden, otherwise `baseIteratee`.\nexport default function cb(value, context, argCount) {\n  if (_.iteratee !== iteratee) return _.iteratee(value, context);\n  return baseIteratee(value, context, argCount);\n}\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the results of applying the `iteratee` to each element of `obj`.\n// In contrast to `_.map` it returns an object.\nexport default function mapObject(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = keys(obj),\n      length = _keys.length,\n      results = {};\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys[index];\n    results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function noop(){}\n","import noop from './noop.js';\nimport get from './get.js';\n\n// Generates a function for a given object that returns a given property.\nexport default function propertyOf(obj) {\n  if (obj == null) return noop;\n  return function(path) {\n    return get(obj, path);\n  };\n}\n","import optimizeCb from './_optimizeCb.js';\n\n// Run a function **n** times.\nexport default function times(n, iteratee, context) {\n  var accum = Array(Math.max(0, n));\n  iteratee = optimizeCb(iteratee, context, 1);\n  for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n  return accum;\n}\n","// Return a random integer between `min` and `max` (inclusive).\nexport default function random(min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n","// A (possibly faster) way to get the current timestamp as an integer.\nexport default Date.now || function() {\n  return new Date().getTime();\n};\n","import keys from './keys.js';\n\n// Internal helper to generate functions for escaping and unescaping strings\n// to/from HTML interpolation.\nexport default function createEscaper(map) {\n  var escaper = function(match) {\n    return map[match];\n  };\n  // Regexes for identifying a key that needs to be escaped.\n  var source = '(?:' + keys(map).join('|') + ')';\n  var testRegexp = RegExp(source);\n  var replaceRegexp = RegExp(source, 'g');\n  return function(string) {\n    string = string == null ? '' : '' + string;\n    return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n  };\n}\n","// Internal list of HTML entities for escaping.\nexport default {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\n","import createEscaper from './_createEscaper.js';\nimport escapeMap from './_escapeMap.js';\n\n// Function for escaping strings to HTML interpolation.\nexport default createEscaper(escapeMap);\n","import createEscaper from './_createEscaper.js';\nimport unescapeMap from './_unescapeMap.js';\n\n// Function for unescaping strings from HTML interpolation.\nexport default createEscaper(unescapeMap);\n","import invert from './invert.js';\nimport escapeMap from './_escapeMap.js';\n\n// Internal list of HTML entities for unescaping.\nexport default invert(escapeMap);\n","import _ from './underscore.js';\n\n// By default, Underscore uses ERB-style template delimiters. Change the\n// following template settings to use alternative delimiters.\nexport default _.templateSettings = {\n  evaluate: /<%([\\s\\S]+?)%>/g,\n  interpolate: /<%=([\\s\\S]+?)%>/g,\n  escape: /<%-([\\s\\S]+?)%>/g\n};\n","import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js';\n\n// When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n}\n\n// In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\n\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings);\n\n  // Combine delimiters into one regular expression via alternation.\n  var matcher = RegExp([\n    (settings.escape || noMatch).source,\n    (settings.interpolate || noMatch).source,\n    (settings.evaluate || noMatch).source\n  ].join('|') + '|$', 'g');\n\n  // Compile the template source, escaping string literals appropriately.\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offset.\n    return match;\n  });\n  source += \"';\\n\";\n\n  var argument = settings.variable;\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error(\n      'variable is not a bare identifier: ' + argument\n    );\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" +\n    \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n    source + 'return __p;\\n';\n\n  var render;\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function(data) {\n    return render.call(this, data, _);\n  };\n\n  // Provide the compiled source as a convenience for precompilation.\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n\n  return template;\n}\n","import isFunction from './isFunction.js';\nimport toPath from './_toPath.js';\n\n// Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n  return obj;\n}\n","// Generate a unique integer id (unique within the entire client session).\n// Useful for temporary DOM ids.\nvar idCounter = 0;\nexport default function uniqueId(prefix) {\n  var id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n","import _ from './underscore.js';\n\n// Start chaining a wrapped Underscore object.\nexport default function chain(obj) {\n  var instance = _(obj);\n  instance._chain = true;\n  return instance;\n}\n","import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n// Internal function to execute `sourceFunc` bound to `context` with optional\n// `args`. Determines whether to execute a function as a constructor or as a\n// normal function.\nexport default function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n  if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n  var self = baseCreate(sourceFunc.prototype);\n  var result = sourceFunc.apply(self, args);\n  if (isObject(result)) return result;\n  return self;\n}\n","import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js';\n\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = restArguments(function(func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function() {\n    var position = 0, length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return executeBound(func, bound, this, this, args);\n  };\n  return bound;\n});\n\npartial.placeholder = _;\nexport default partial;\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport executeBound from './_executeBound.js';\n\n// Create a function bound to a given object (assigning `this`, and arguments,\n// optionally).\nexport default restArguments(function(func, context, args) {\n  if (!isFunction(func)) throw new TypeError('Bind must be called on a function');\n  var bound = restArguments(function(callArgs) {\n    return executeBound(func, bound, context, this, args.concat(callArgs));\n  });\n  return bound;\n});\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getLength from './_getLength.js';\n\n// Internal helper for collection methods to determine whether a collection\n// should be iterated as an array or as an object.\n// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\nexport default createSizePropertyCheck(getLength);\n","import getLength from './_getLength.js';\nimport isArrayLike from './_isArrayLike.js';\nimport isArray from './isArray.js';\nimport isArguments from './isArguments.js';\n\n// Internal implementation of a recursive `flatten` function.\nexport default function flatten(input, depth, strict, output) {\n  output = output || [];\n  if (!depth && depth !== 0) {\n    depth = Infinity;\n  } else if (depth <= 0) {\n    return output.concat(input);\n  }\n  var idx = output.length;\n  for (var i = 0, length = getLength(input); i < length; i++) {\n    var value = input[i];\n    if (isArrayLike(value) && (isArray(value) || isArguments(value))) {\n      // Flatten current level of array or arguments object.\n      if (depth > 1) {\n        flatten(value, depth - 1, strict, output);\n        idx = output.length;\n      } else {\n        var j = 0, len = value.length;\n        while (j < len) output[idx++] = value[j++];\n      }\n    } else if (!strict) {\n      output[idx++] = value;\n    }\n  }\n  return output;\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport bind from './bind.js';\n\n// Bind a number of an object's methods to that object. Remaining arguments\n// are the method names to be bound. Useful for ensuring that all callbacks\n// defined on an object belong to it.\nexport default restArguments(function(obj, keys) {\n  keys = flatten(keys, false, false);\n  var index = keys.length;\n  if (index < 1) throw new Error('bindAll must be passed function names');\n  while (index--) {\n    var key = keys[index];\n    obj[key] = bind(obj[key], obj);\n  }\n  return obj;\n});\n","import has from './_has.js';\n\n// Memoize an expensive function by storing its results.\nexport default function memoize(func, hasher) {\n  var memoize = function(key) {\n    var cache = memoize.cache;\n    var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n    if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n    return cache[address];\n  };\n  memoize.cache = {};\n  return memoize;\n}\n","import restArguments from './restArguments.js';\n\n// Delays a function for the given number of milliseconds, and then calls\n// it with the arguments supplied.\nexport default restArguments(function(func, wait, args) {\n  return setTimeout(function() {\n    return func.apply(null, args);\n  }, wait);\n});\n","import partial from './partial.js';\nimport delay from './delay.js';\nimport _ from './underscore.js';\n\n// Defers a function, scheduling it to run after the current call stack has\n// cleared.\nexport default partial(delay, _, 1);\n","import now from './now.js';\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nexport default function throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var _now = now();\n    if (!previous && options.leading === false) previous = _now;\n    var remaining = wait - (_now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = _now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n","import restArguments from './restArguments.js';\nimport now from './now.js';\n\n// When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\nexport default function debounce(func, wait, immediate) {\n  var timeout, previous, args, result, context;\n\n  var later = function() {\n    var passed = now() - previous;\n    if (wait > passed) {\n      timeout = setTimeout(later, wait - passed);\n    } else {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n      // This check is needed because `func` can recursively invoke `debounced`.\n      if (!timeout) args = context = null;\n    }\n  };\n\n  var debounced = restArguments(function(_args) {\n    context = this;\n    args = _args;\n    previous = now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n      if (immediate) result = func.apply(context, args);\n    }\n    return result;\n  });\n\n  debounced.cancel = function() {\n    clearTimeout(timeout);\n    timeout = args = context = null;\n  };\n\n  return debounced;\n}\n","import partial from './partial.js';\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nexport default function wrap(func, wrapper) {\n  return partial(wrapper, func);\n}\n","// Returns a negated version of the passed-in predicate.\nexport default function negate(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n","// Returns a function that is the composition of a list of functions, each\n// consuming the return value of the function that follows.\nexport default function compose() {\n  var args = arguments;\n  var start = args.length - 1;\n  return function() {\n    var i = start;\n    var result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n","// Returns a function that will only be executed on and after the Nth call.\nexport default function after(times, func) {\n  return function() {\n    if (--times < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n","// Returns a function that will only be executed up to (but not including) the\n// Nth call.\nexport default function before(times, func) {\n  var memo;\n  return function() {\n    if (--times > 0) {\n      memo = func.apply(this, arguments);\n    }\n    if (times <= 1) func = null;\n    return memo;\n  };\n}\n","import partial from './partial.js';\nimport before from './before.js';\n\n// Returns a function that will be executed at most one time, no matter how\n// often you call it. Useful for lazy initialization.\nexport default partial(before, 2);\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the first key on an object that passes a truth test.\nexport default function findKey(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = keys(obj), key;\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nexport default function createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = cb(predicate, context);\n    var length = getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the first index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(1);\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the last index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(-1);\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Use a comparator function to figure out the smallest index at which\n// an object should be inserted so as to maintain order. Uses binary search.\nexport default function sortedIndex(array, obj, iteratee, context) {\n  iteratee = cb(iteratee, context, 1);\n  var value = iteratee(obj);\n  var low = 0, high = getLength(array);\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n  }\n  return low;\n}\n","import getLength from './_getLength.js';\nimport { slice } from './_setup.js';\nimport isNaN from './isNaN.js';\n\n// Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\nexport default function createIndexFinder(dir, predicateFind, sortedIndex) {\n  return function(array, item, idx) {\n    var i = 0, length = getLength(array);\n    if (typeof idx == 'number') {\n      if (dir > 0) {\n        i = idx >= 0 ? idx : Math.max(idx + length, i);\n      } else {\n        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n      }\n    } else if (sortedIndex && idx && length) {\n      idx = sortedIndex(array, item);\n      return array[idx] === item ? idx : -1;\n    }\n    if (item !== item) {\n      idx = predicateFind(slice.call(array, i, length), isNaN);\n      return idx >= 0 ? idx + i : -1;\n    }\n    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n      if (array[idx] === item) return idx;\n    }\n    return -1;\n  };\n}\n","import sortedIndex from './sortedIndex.js';\nimport findIndex from './findIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the first occurrence of an item in an array,\n// or -1 if the item is not included in the array.\n// If the array is large and already in sort order, pass `true`\n// for **isSorted** to use binary search.\nexport default createIndexFinder(1, findIndex, sortedIndex);\n","import findLastIndex from './findLastIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the last occurrence of an item in an array,\n// or -1 if the item is not included in the array.\nexport default createIndexFinder(-1, findLastIndex);\n","import isArrayLike from './_isArrayLike.js';\nimport findIndex from './findIndex.js';\nimport findKey from './findKey.js';\n\n// Return the first value which passes a truth test.\nexport default function find(obj, predicate, context) {\n  var keyFinder = isArrayLike(obj) ? findIndex : findKey;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}\n","import find from './find.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.find`: getting the first\n// object containing specific `key:value` pairs.\nexport default function findWhere(obj, attrs) {\n  return find(obj, matcher(attrs));\n}\n","import optimizeCb from './_optimizeCb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// The cornerstone for collection functions, an `each`\n// implementation, aka `forEach`.\n// Handles raw objects in addition to array-likes. Treats all\n// sparse array-likes as if they were dense.\nexport default function each(obj, iteratee, context) {\n  iteratee = optimizeCb(iteratee, context);\n  var i, length;\n  if (isArrayLike(obj)) {\n    for (i = 0, length = obj.length; i < length; i++) {\n      iteratee(obj[i], i, obj);\n    }\n  } else {\n    var _keys = keys(obj);\n    for (i = 0, length = _keys.length; i < length; i++) {\n      iteratee(obj[_keys[i]], _keys[i], obj);\n    }\n  }\n  return obj;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the results of applying the iteratee to each element.\nexport default function map(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length,\n      results = Array(length);\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    results[index] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// Internal helper to create a reducing function, iterating left or right.\nexport default function createReduce(dir) {\n  // Wrap code that reassigns argument variables in a separate function than\n  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n  var reducer = function(obj, iteratee, memo, initial) {\n    var _keys = !isArrayLike(obj) && keys(obj),\n        length = (_keys || obj).length,\n        index = dir > 0 ? 0 : length - 1;\n    if (!initial) {\n      memo = obj[_keys ? _keys[index] : index];\n      index += dir;\n    }\n    for (; index >= 0 && index < length; index += dir) {\n      var currentKey = _keys ? _keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  return function(obj, iteratee, memo, context) {\n    var initial = arguments.length >= 3;\n    return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n  };\n}\n","import createReduce from './_createReduce.js';\n\n// **Reduce** builds up a single result from a list of values, aka `inject`,\n// or `foldl`.\nexport default createReduce(1);\n","import createReduce from './_createReduce.js';\n\n// The right-associative version of reduce, also known as `foldr`.\nexport default createReduce(-1);\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// Return all the elements that pass a truth test.\nexport default function filter(obj, predicate, context) {\n  var results = [];\n  predicate = cb(predicate, context);\n  each(obj, function(value, index, list) {\n    if (predicate(value, index, list)) results.push(value);\n  });\n  return results;\n}\n","import filter from './filter.js';\nimport negate from './negate.js';\nimport cb from './_cb.js';\n\n// Return all the elements for which a truth test fails.\nexport default function reject(obj, predicate, context) {\n  return filter(obj, negate(cb(predicate)), context);\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine whether all of the elements pass a truth test.\nexport default function every(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (!predicate(obj[currentKey], currentKey, obj)) return false;\n  }\n  return true;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine if at least one element in the object passes a truth test.\nexport default function some(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (predicate(obj[currentKey], currentKey, obj)) return true;\n  }\n  return false;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport indexOf from './indexOf.js';\n\n// Determine if the array or object contains a given item (using `===`).\nexport default function contains(obj, item, fromIndex, guard) {\n  if (!isArrayLike(obj)) obj = values(obj);\n  if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n  return indexOf(obj, item, fromIndex) >= 0;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport map from './map.js';\nimport deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Invoke a method (with arguments) on every item in a collection.\nexport default restArguments(function(obj, path, args) {\n  var contextPath, func;\n  if (isFunction(path)) {\n    func = path;\n  } else {\n    path = toPath(path);\n    contextPath = path.slice(0, -1);\n    path = path[path.length - 1];\n  }\n  return map(obj, function(context) {\n    var method = func;\n    if (!method) {\n      if (contextPath && contextPath.length) {\n        context = deepGet(context, contextPath);\n      }\n      if (context == null) return void 0;\n      method = context[path];\n    }\n    return method == null ? method : method.apply(context, args);\n  });\n});\n","import map from './map.js';\nimport property from './property.js';\n\n// Convenience version of a common use case of `_.map`: fetching a property.\nexport default function pluck(obj, key) {\n  return map(obj, property(key));\n}\n","import filter from './filter.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.filter`: selecting only\n// objects containing specific `key:value` pairs.\nexport default function where(obj, attrs) {\n  return filter(obj, matcher(attrs));\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the maximum element (or element-based computation).\nexport default function max(obj, iteratee, context) {\n  var result = -Infinity, lastComputed = -Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value > result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the minimum element (or element-based computation).\nexport default function min(obj, iteratee, context) {\n  var result = Infinity, lastComputed = Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value < result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed < lastComputed || (computed === Infinity && result === Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArray from './isArray.js';\nimport { slice } from './_setup.js';\nimport isString from './isString.js';\nimport isArrayLike from './_isArrayLike.js';\nimport map from './map.js';\nimport identity from './identity.js';\nimport values from './values.js';\n\n// Safely create a real, live array from anything iterable.\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\nexport default function toArray(obj) {\n  if (!obj) return [];\n  if (isArray(obj)) return slice.call(obj);\n  if (isString(obj)) {\n    // Keep surrogate pair characters together.\n    return obj.match(reStrSymbol);\n  }\n  if (isArrayLike(obj)) return map(obj, identity);\n  return values(obj);\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n","import sample from './sample.js';\n\n// Shuffle a collection.\nexport default function shuffle(obj) {\n  return sample(obj, Infinity);\n}\n","import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js';\n\n// Sort the object's values by a criterion produced by an iteratee.\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function(value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function(left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n    return left.index - right.index;\n  }), 'value');\n}\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// An internal function used for aggregate \"group by\" operations.\nexport default function group(behavior, partition) {\n  return function(obj, iteratee, context) {\n    var result = partition ? [[], []] : {};\n    iteratee = cb(iteratee, context);\n    each(obj, function(value, index) {\n      var key = iteratee(value, index, obj);\n      behavior(result, value, key);\n    });\n    return result;\n  };\n}\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Groups the object's values by a criterion. Pass either a string attribute\n// to group by, or a function that returns the criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key].push(value); else result[key] = [value];\n});\n","import group from './_group.js';\n\n// Indexes the object's values by a criterion, similar to `_.groupBy`, but for\n// when you know that your index values will be unique.\nexport default group(function(result, value, key) {\n  result[key] = value;\n});\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Counts instances of an object that group by a certain criterion. Pass\n// either a string attribute to count by, or a function that returns the\n// criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key]++; else result[key] = 1;\n});\n","import group from './_group.js';\n\n// Split a collection into two arrays: one whose elements all pass the given\n// truth test, and one whose elements all do not pass the truth test.\nexport default group(function(result, value, pass) {\n  result[pass ? 0 : 1].push(value);\n}, true);\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the number of elements in a collection.\nexport default function size(obj) {\n  if (obj == null) return 0;\n  return isArrayLike(obj) ? obj.length : keys(obj).length;\n}\n","// Internal `_.pick` helper function to determine whether `key` is an enumerable\n// property name of `obj`.\nexport default function keyInObj(value, key, obj) {\n  return key in obj;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport optimizeCb from './_optimizeCb.js';\nimport allKeys from './allKeys.js';\nimport keyInObj from './_keyInObj.js';\nimport flatten from './_flatten.js';\n\n// Return a copy of the object only containing the allowed properties.\nexport default restArguments(function(obj, keys) {\n  var result = {}, iteratee = keys[0];\n  if (obj == null) return result;\n  if (isFunction(iteratee)) {\n    if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n    keys = allKeys(obj);\n  } else {\n    iteratee = keyInObj;\n    keys = flatten(keys, false, false);\n    obj = Object(obj);\n  }\n  for (var i = 0, length = keys.length; i < length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    if (iteratee(value, key, obj)) result[key] = value;\n  }\n  return result;\n});\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport negate from './negate.js';\nimport map from './map.js';\nimport flatten from './_flatten.js';\nimport contains from './contains.js';\nimport pick from './pick.js';\n\n// Return a copy of the object without the disallowed properties.\nexport default restArguments(function(obj, keys) {\n  var iteratee = keys[0], context;\n  if (isFunction(iteratee)) {\n    iteratee = negate(iteratee);\n    if (keys.length > 1) context = keys[1];\n  } else {\n    keys = map(flatten(keys, false, false), String);\n    iteratee = function(value, key) {\n      return !contains(keys, key);\n    };\n  }\n  return pick(obj, iteratee, context);\n});\n","import { slice } from './_setup.js';\n\n// Returns everything but the last entry of the array. Especially useful on\n// the arguments object. Passing **n** will return all the values in\n// the array, excluding the last N.\nexport default function initial(array, n, guard) {\n  return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n}\n","import initial from './initial.js';\n\n// Get the first element of an array. Passing **n** will return the first N\n// values in the array. The **guard** check allows it to work with `_.map`.\nexport default function first(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[0];\n  return initial(array, array.length - n);\n}\n","import { slice } from './_setup.js';\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nexport default function rest(array, n, guard) {\n  return slice.call(array, n == null || guard ? 1 : n);\n}\n","import rest from './rest.js';\n\n// Get the last element of an array. Passing **n** will return the last N\n// values in the array.\nexport default function last(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[array.length - 1];\n  return rest(array, Math.max(0, array.length - n));\n}\n","import filter from './filter.js';\n\n// Trim out all falsy values from an array.\nexport default function compact(array) {\n  return filter(array, Boolean);\n}\n","import _flatten from './_flatten.js';\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nexport default function flatten(array, depth) {\n  return _flatten(array, depth, false);\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport filter from './filter.js';\nimport contains from './contains.js';\n\n// Take the difference between one array and a number of other arrays.\n// Only the elements present in just the first array will remain.\nexport default restArguments(function(array, rest) {\n  rest = flatten(rest, true, true);\n  return filter(array, function(value){\n    return !contains(rest, value);\n  });\n});\n","import restArguments from './restArguments.js';\nimport difference from './difference.js';\n\n// Return a version of the array that does not contain the specified value(s).\nexport default restArguments(function(array, otherArrays) {\n  return difference(array, otherArrays);\n});\n","import isBoolean from './isBoolean.js';\nimport cb from './_cb.js';\nimport getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce a duplicate-free version of the array. If the array has already\n// been sorted, you have the option of using a faster algorithm.\n// The faster algorithm will not work with an iteratee if the iteratee\n// is not a one-to-one function, so providing an iteratee will disable\n// the faster algorithm.\nexport default function uniq(array, isSorted, iteratee, context) {\n  if (!isBoolean(isSorted)) {\n    context = iteratee;\n    iteratee = isSorted;\n    isSorted = false;\n  }\n  if (iteratee != null) iteratee = cb(iteratee, context);\n  var result = [];\n  var seen = [];\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var value = array[i],\n        computed = iteratee ? iteratee(value, i, array) : value;\n    if (isSorted && !iteratee) {\n      if (!i || seen !== computed) result.push(value);\n      seen = computed;\n    } else if (iteratee) {\n      if (!contains(seen, computed)) {\n        seen.push(computed);\n        result.push(value);\n      }\n    } else if (!contains(result, value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport uniq from './uniq.js';\nimport flatten from './_flatten.js';\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nexport default restArguments(function(arrays) {\n  return uniq(flatten(arrays, true, true));\n});\n","import getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce an array that contains every item shared between all the\n// passed-in arrays.\nexport default function intersection(array) {\n  var result = [];\n  var argsLength = arguments.length;\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var item = array[i];\n    if (contains(result, item)) continue;\n    var j;\n    for (j = 1; j < argsLength; j++) {\n      if (!contains(arguments[j], item)) break;\n    }\n    if (j === argsLength) result.push(item);\n  }\n  return result;\n}\n","import max from './max.js';\nimport getLength from './_getLength.js';\nimport pluck from './pluck.js';\n\n// Complement of zip. Unzip accepts an array of arrays and groups\n// each array's elements on shared indices.\nexport default function unzip(array) {\n  var length = (array && max(array, getLength).length) || 0;\n  var result = Array(length);\n\n  for (var index = 0; index < length; index++) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport unzip from './unzip.js';\n\n// Zip together multiple lists into a single array -- elements that share\n// an index go together.\nexport default restArguments(unzip);\n","import getLength  from './_getLength.js';\n\n// Converts lists into objects. Pass either a single array of `[key, value]`\n// pairs, or two parallel arrays of the same length -- one of keys, and one of\n// the corresponding values. Passing by pairs is the reverse of `_.pairs`.\nexport default function object(list, values) {\n  var result = {};\n  for (var i = 0, length = getLength(list); i < length; i++) {\n    if (values) {\n      result[list[i]] = values[i];\n    } else {\n      result[list[i][0]] = list[i][1];\n    }\n  }\n  return result;\n}\n","// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nexport default function range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\n","import { slice } from './_setup.js';\n\n// Chunk a single array into multiple arrays, each containing `count` or fewer\n// items.\nexport default function chunk(array, count) {\n  if (count == null || count < 1) return [];\n  var result = [];\n  var i = 0, length = array.length;\n  while (i < length) {\n    result.push(slice.call(array, i, i += count));\n  }\n  return result;\n}\n","import _ from './underscore.js';\n\n// Helper function to continue chaining intermediate results.\nexport default function chainResult(instance, obj) {\n  return instance._chain ? _(obj).chain() : obj;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport functions from './functions.js';\nimport { push } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add your own custom functions to the Underscore object.\nexport default function mixin(obj) {\n  each(functions(obj), function(name) {\n    var func = _[name] = obj[name];\n    _.prototype[name] = function() {\n      var args = [this._wrapped];\n      push.apply(args, arguments);\n      return chainResult(this, func.apply(_, args));\n    };\n  });\n  return _;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport { ArrayProto } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add all mutator `Array` functions to the wrapper.\neach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) {\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) {\n        delete obj[0];\n      }\n    }\n    return chainResult(this, obj);\n  };\n});\n\n// Add all accessor `Array` functions to the wrapper.\neach(['concat', 'join', 'slice'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) obj = method.apply(obj, arguments);\n    return chainResult(this, obj);\n  };\n});\n\nexport default _;\n","// Default Export\n// ==============\n// In this module, we mix our bundled exports into the `_` object and export\n// the result. This is analogous to setting `module.exports = _` in CommonJS.\n// Hence, this module is also the entry point of our UMD bundle and the package\n// entry point for CommonJS and AMD users. In other words, this is (the source\n// of) the module you are interfacing with when you do any of the following:\n//\n// ```js\n// // CommonJS\n// var _ = require('underscore');\n//\n// // AMD\n// define(['underscore'], function(_) {...});\n//\n// // UMD in the browser\n// // _ is available as a global variable\n// ```\nimport * as allExports from './index.js';\nimport { mixin } from './index.js';\n\n// Add all of the Underscore functions to the wrapper object.\nvar _ = mixin(allExports);\n// Legacy Node.js API.\n_._ = _;\n// Export the Underscore API.\nexport default _;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}